AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31


## These settings are used for every lambda and API
Globals:
  Function:
    Runtime: provided.al2
    Handler: bootstrap
    Architectures: ["x86_64"]
    Timeout: 30
    MemorySize: 128
    # Environment:
    #   Variables:
  Api:
    Name: holdcrypt
    Cors:
      AllowMethods: "'*'"
      AllowHeaders: "'*'"
      AllowOrigin: "'*'"
    Auth:
      AddDefaultAuthorizerToCorsPreflight: False


Resources:
#########################################
## Users
#########################################
  UsersGet:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: users_get
      CodeUri: target/lambda/users_get
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /v1/users
            Method: GET
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: ["dynamodb:Scan"]
              Resource: ["arn:aws:dynamodb:ap-southeast-2:799166840327:table/user", "arn:aws:dynamodb:ap-southeast-2:799166840327:table/coin"]
  UsersPut:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: users_put
      CodeUri: target/lambda/users_put
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /v1/users
            Method: PUT
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: ["dynamodb:UpdateItem", "dynamodb:PutItem"]
              Resource: "arn:aws:dynamodb:ap-southeast-2:799166840327:table/user"
#########################################
## Transactions
#########################################
  TransactionsPost:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: transactions_post
      CodeUri: target/lambda/transactions_post
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /v1/transactions
            Method: POST
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: ["dynamodb:UpdateItem", "dynamodb:PutItem"]
              Resource: "arn:aws:dynamodb:ap-southeast-2:799166840327:table/user"
#########################################
## Coins
#########################################
  CoinsGet:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: coins_get
      CodeUri: target/lambda/coins_get
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /v1/coins
            Method: GET
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: "dynamodb:Scan"
              Resource: !Sub "arn:aws:dynamodb:ap-southeast-2:799166840327:table/coin"
  CoinsPut:
    Type: AWS::Serverless::Function
    Properties:
      FunctionName: coins_put
      CodeUri: target/lambda/coins_put
      Events:
        CatchAll:
          Type: Api
          Properties:
            Path: /v1/coins
            Method: PUT
      Policies:
        - Version: 2012-10-17
          Statement:
            - Effect: Allow
              Action: ["dynamodb:UpdateItem", "dynamodb:PutItem"]
              Resource: !Sub "arn:aws:dynamodb:ap-southeast-2:799166840327:table/coin"

